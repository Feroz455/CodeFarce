/*
A. Vanya and Fence
time limit per test1 second
memory limit per test256 megabytes
inputstandard input
outputstandard output
Vanya and his friends are walking along the fence of height h and they do not want the guard to notice them. In order to achieve this the height of each of the friends should not exceed h. If the height of some person is greater than h he can bend down and then he surely won't be noticed by the guard. The height of the i-th person is equal to ai.

Consider the width of the person walking as usual to be equal to 1, while the width of the bent person is equal to 2. Friends want to talk to each other while walking, so they would like to walk in a single row. What is the minimum width of the road, such that friends can walk in a row and remain unattended by the guard?

Input
The first line of the input contains two integers n and h (1 ≤ n ≤ 1000, 1 ≤ h ≤ 1000) — the number of friends and the height of the fence, respectively.

The second line contains n integers ai (1 ≤ ai ≤ 2h), the i-th of them is equal to the height of the i-th person.

Output
Print a single integer — the minimum possible valid width of the road.

Examples
inputCopy
3 7
4 5 14
outputCopy
4
inputCopy
6 1
1 1 1 1 1 1
outputCopy
6
inputCopy
6 5
7 6 8 9 10 5
outputCopy
11
Note
In the first sample, only person number 3 must bend down, so the required width is equal to 1 + 1 + 2 = 4.

In the second sample, all friends are short enough and no one has to bend, so the width 1 + 1 + 1 + 1 + 1 + 1 = 6 is enough.

In the third sample, all the persons have to bend, except the last one. The required minimum width of the road is equal to 2 + 2 + 2 + 2 + 2 + 1 = 11.


*/

#include <iostream>
#include <cmath>
using namespace std;
int main()
{
    int frnd, ai;
    float height, array[1000];
    cin >> frnd >> height;
    for (int i = 0; i < frnd; i++)
    {
        cin >> array[i];
        ai += ceill(array[i] / height);
    }
    cout << ai;
    return 0;
}
/*
→Judgement Protocol
Test: #1, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
3 7
4 5 14
Output
4
Answer
4
Checker Log
ok 1 number(s): "4"
Test: #2, time: 15 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
6 1
1 1 1 1 1 1
Output
6
Answer
6
Checker Log
ok 1 number(s): "6"
Test: #3, time: 0 ms., memory: 136 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
6 5
7 6 8 9 10 5
Output
11
Answer
11
Checker Log
ok 1 number(s): "11"
Test: #4, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
10 420
214 614 297 675 82 740 174 23 255 15
Output
13
Answer
13
Checker Log
ok 1 number(s): "13"
Test: #5, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
10 561
657 23 1096 487 785 66 481 554 1000 821
Output
15
Answer
15
Checker Log
ok 1 number(s): "15"
Test: #6, time: 0 ms., memory: 132 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
100 342
478 143 359 336 162 333 385 515 117 496 310 538 469 539 258 676 466 677 1 296 150 560 26 213 627 221 255 126 617 174 279 178 24 435 70 145 619 46 669 566 300 67 576 251 58 176 441 564 569 194 24 669 73 262 457 259 619 78 400 579 222 626 269 47 80 315 160 194 455 186 315 424 197 246 683 220 68 682 83 233 290 664 273 598 362 305 674 614 321 575 362 120 14 534 62 436 294 351 485 396
Output
144
Answer
144
Checker Log
ok 1 number(s): "144"
Test: #7, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
100 290
244 49 276 77 449 261 468 458 201 424 9 131 300 88 432 394 104 77 13 289 435 259 111 453 168 394 156 412 351 576 178 530 81 271 228 564 125 328 42 372 205 61 180 471 33 360 567 331 222 318 241 117 529 169 188 484 202 202 299 268 246 343 44 364 333 494 59 236 84 485 50 8 428 8 571 227 205 310 210 9 324 472 368 490 114 84 296 305 411 351 569 393 283 120 510 171 232 151 134 366
Output
145
Answer
145
Checker Log
ok 1 number(s): "145"
Test: #8, time: 0 ms., memory: 136 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 811
1143 472 1399 230 840 914 563 888 62 585 299 1416 975 1569 254 1501 322 1390 600 809 801 1444 438 832 310 1499 1025 984 580 748 1250 863 718 1398 1509 763 1060 756 957 1294 1583 436 925 1226 891 1399 1547 1356 993 59 1544 1429 148 581 1013 768 59 45 1580 67 656 1149 324 1422 11 1414 1096 1172 1261 8 9 877 807 722 623 1401 609 488 647 1575 68 718 625 1185 58 260 1345 431 672 189 960 527 1170 197 1169 921 365 7 1600 1485 709 166 828 1191 432 1494 1406 1151 127 1031 1389 1396 1060 216 803 1424 1350 ...
Output
1520
Answer
1520
Checker Log
ok 1 number(s): "1520"
Test: #9, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 656
945 1201 463 1222 365 300 936 99 1106 227 1157 399 250 746 731 905 822 970 275 773 904 1281 395 1224 585 894 918 334 580 358 471 453 153 50 1290 847 123 719 156 1252 530 700 142 622 154 367 502 171 194 1201 381 526 974 413 610 221 950 773 181 1301 357 845 1181 1090 858 622 691 72 650 500 805 925 1116 193 1108 716 844 328 1078 435 776 626 276 1125 502 508 397 1130 524 791 178 1146 343 1223 424 1190 85 485 937 1263 762 93 419 236 527 81 1271 1033 558 948 571 1123 1288 719 601 236 127 575 942 109 84...
Output
1498
Answer
1498
Checker Log
ok 1 number(s): "1498"
Test: #10, time: 15 ms., memory: 0 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1 1
1
Output
1
Answer
1
Checker Log
ok 1 number(s): "1"
Test: #11, time: 0 ms., memory: 8 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1 1
2
Output
2
Answer
2
Checker Log
ok 1 number(s): "2"
Test: #12, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
46 71
30 26 56 138 123 77 60 122 73 45 79 10 130 3 14 1 38 46 128 50 82 16 32 68 28 98 62 106 2 49 131 11 114 39 139 70 40 50 45 137 33 30 35 136 135 19
Output
63
Answer
63
Checker Log
ok 1 number(s): "63"
Test: #13, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
20 723
212 602 293 591 754 91 1135 640 80 495 845 928 1399 498 926 1431 1226 869 814 1386
Output
31
Answer
31
Checker Log
ok 1 number(s): "31"
Test: #14, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
48 864
843 1020 751 1694 18 1429 1395 1174 272 1158 1628 1233 1710 441 765 561 778 748 1501 1200 563 1263 1398 1687 1518 1640 1591 839 500 466 1603 1587 1201 1209 432 868 1159 639 649 628 9 91 1036 147 896 1557 941 518
Output
75
Answer
75
Checker Log
ok 1 number(s): "75"
Test: #15, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
26 708
549 241 821 734 945 1161 566 1268 216 30 1142 730 529 1014 255 168 796 1148 89 113 1328 286 743 871 1259 1397
Output
41
Answer
41
Checker Log
ok 1 number(s): "41"
Test: #16, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
829 163
190 321 284 194 190 256 191 281 196 240 27 118 310 155 325 318 297 64 10 169 98 245 103 61 23 109 247 70 65 177 186 274 89 22 192 94 71 275 299 227 83 165 206 123 17 188 52 299 12 16 294 246 153 90 212 164 108 319 9 273 151 291 175 68 199 90 20 25 254 114 181 148 27 203 242 251 194 294 244 190 196 278 225 286 314 273 43 4 172 294 95 89 11 53 323 69 65 65 220 79 123 181 95 107 201 73 145 129 77 69 186 46 128 214 239 145 49 266 280 311 253 74 238 105 135 67 120 184 160 230 14 251 74 223 87 11 167 28...
Output
1266
Answer
1266
Checker Log
ok 1 number(s): "1266"
Test: #17, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
957 7
13 9 2 3 5 6 1 1 10 9 9 3 9 4 4 4 2 11 10 11 8 2 12 5 11 8 1 12 8 2 5 10 6 2 14 11 2 5 8 5 10 7 2 10 10 6 6 6 6 14 7 8 1 11 3 13 1 9 11 9 11 6 4 5 6 8 7 1 13 13 14 2 8 5 12 6 11 14 3 14 3 8 12 3 10 13 7 5 4 12 4 14 8 4 7 9 9 1 6 4 12 4 10 3 13 14 8 8 9 4 14 5 6 11 9 11 11 10 13 5 11 2 9 7 9 3 12 10 12 10 3 6 12 10 6 2 6 10 10 3 14 10 3 1 13 8 10 1 5 11 1 13 10 5 7 8 11 10 3 8 9 10 14 9 14 14 10 11 2 5 11 3 4 1 3 14 14 8 6 7 11 10 4 9 13 3 10 14 13 10 13 14 1 12 8 5 2 4 3 9 3 12 9 6 14 6 3 5 8 6 3 8 ...
Output
1452
Answer
1452
Checker Log
ok 1 number(s): "1452"
Test: #18, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
381 852
343 354 1667 1251 89 912 1248 1269 239 1199 549 1684 1622 1163 952 494 166 1646 699 1687 1329 756 235 300 688 453 1665 1600 590 214 1693 995 819 1496 342 966 1426 992 1115 944 67 1645 125 460 498 1350 1146 545 926 1393 1060 448 803 285 552 1618 224 137 16 1128 202 730 105 1321 1615 481 126 335 1484 1435 1539 34 160 327 1690 771 646 564 570 1602 239 984 803 1097 54 1466 1499 879 834 1417 1148 943 1087 602 979 470 21 926 1571 312 1312 1617 1536 1075 1278 565 637 1242 1596 157 182 1475 1618 1450 590 ...
Output
584
Answer
584
Checker Log
ok 1 number(s): "584"
Test: #19, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
509 992
41 1104 529 1932 336 236 1147 388 151 990 759 581 617 704 1619 1756 1304 1903 1343 1432 790 843 1300 268 701 1978 1674 1742 648 1189 192 443 1111 56 888 944 1199 1639 280 594 1272 1444 874 1864 317 1194 92 1851 1327 757 1665 797 483 391 1103 1567 1487 1765 95 505 1873 984 560 294 424 877 677 1573 121 693 1666 953 75 1606 1010 1578 651 1528 1412 1218 521 1256 105 1361 825 440 1080 1450 1012 717 1707 676 1140 784 1887 793 795 494 1240 1834 1773 408 826 953 1553 324 1873 1709 724 1514 714 562 1701 13...
Output
758
Answer
758
Checker Log
ok 1 number(s): "758"
Test: #20, time: 0 ms., memory: 136 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
75 940
1620 1745 1599 441 64 1466 1496 1239 1716 1475 778 106 1136 1212 1261 444 781 257 1071 747 626 232 609 1544 682 1326 469 1361 1460 1450 1207 1319 922 625 1737 1057 1698 592 692 80 1016 541 1254 201 682 1007 847 206 1066 809 259 109 240 1611 219 1455 1326 1377 1827 786 42 1002 1382 1592 543 1866 1198 334 1524 1760 340 1566 955 257 1118
Output
116
Answer
116
Checker Log
ok 1 number(s): "116"
Test: #21, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
795 592
181 910 501 50 175 758 419 933 564 715 1132 1075 1123 529 288 738 479 625 148 380 303 247 322 656 575 947 1062 15 318 825 354 112 958 1025 858 1004 440 679 505 34 997 76 299 372 357 243 321 553 1020 965 944 137 720 910 402 324 973 605 963 11 705 616 901 181 960 838 668 1084 673 371 115 925 1119 975 118 348 1048 671 854 669 562 811 424 300 1041 158 1126 1046 322 714 428 814 212 257 604 393 314 1020 475 34 1130 696 817 343 1088 789 461 394 1180 885 703 65 1151 323 477 806 211 169 1054 583 352 600 16...
Output
1181
Answer
1181
Checker Log
ok 1 number(s): "1181"
Test: #22, time: 0 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
923 437
523 76 720 777 736 130 847 849 625 768 76 36 430 566 748 728 693 684 472 744 629 416 271 432 577 212 388 1 386 253 687 796 807 473 850 223 777 218 556 99 436 590 225 224 723 513 397 155 826 471 97 724 298 388 38 737 208 165 292 157 198 590 678 725 799 859 113 768 40 19 874 389 674 869 684 571 376 447 664 126 790 749 355 592 335 67 143 135 556 668 305 213 219 133 210 585 682 873 664 770 167 605 850 269 239 522 686 661 143 866 59 267 623 366 684 18 649 835 538 152 648 664 706 103 800 220 750 412 848...
Output
1394
Answer
1394
Checker Log
ok 1 number(s): "1394"
Test: #23, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
347 281
515 340 408 46 140 232 356 382 455 384 166 166 353 109 143 421 507 431 337 414 94 132 74 308 220 377 208 66 500 474 256 498 318 309 68 434 53 274 339 231 551 533 8 330 415 269 323 344 50 220 326 4 240 206 25 502 243 272 417 290 377 187 411 348 444 173 14 240 464 351 487 131 59 395 508 54 461 381 263 332 530 246 74 452 65 367 437 82 448 107 501 270 448 111 416 52 322 371 31 560 224 490 10 327 544 11 180 270 237 61 336 322 467 119 312 457 366 230 551 498 152 428 150 97 282 392 562 30 206 419 428 325...
Output
529
Answer
529
Checker Log
ok 1 number(s): "529"
Test: #24, time: 0 ms., memory: 136 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000
1870 1120 1292 1337 1768 1615 1382 1609 1192 1901 1291 1862 1936 1871 1541 1464 1364 1135 1666 1353 1139 1945 1604 1096 1194 1718 1578 1392 1089 1276 1965 1713 1132 1395 1164 1646 1955 1897 1104 1582 1314 1048 1384 1524 1114 1027 1335 1735 1478 1220 1097 1738 1479 1561 1002 1517 1049 1482 1367 1850 1603 1485 1770 1673 1731 1835 1050 1420 1128 1720 1977 1860 1830 1438 1612 1530 1494 1707 1847 1423 1979 1214 1262 1548 1925 1126 1373 1483 1042 1859 1617 1476 1992 1971 1365 1112 1565 1510 1942 1819 ...
Output
2000
Answer
2000
Checker Log
ok 1 number(s): "2000"
Test: #25, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000
883 410 513 851 211 2 450 853 761 259 607 725 746 953 111 711 336 73 277 877 566 501 936 921 239 803 148 348 1000 14 112 330 402 68 566 443 977 742 175 236 359 507 28 988 433 349 78 472 977 306 894 951 994 876 605 78 504 226 150 645 341 93 287 767 925 819 28 822 627 344 780 182 353 816 386 574 173 750 989 138 254 761 512 443 491 473 339 629 836 446 888 167 607 290 911 863 916 42 618 156 34 624 345 858 536 948 8 625 716 495 676 534 792 294 218 217 288 517 872 646 677 985 786 788 53 925 958 929 58...
Output
1000
Answer
1000
Checker Log
ok 1 number(s): "1000"
Test: #26, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000

Output
2000
Answer
2000
Checker Log
ok 1 number(s): "2000"
Test: #27, time: 0 ms., memory: 144 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000

Output
1000
Answer
1000
Checker Log
ok 1 number(s): "1000"
Test: #28, time: 0 ms., memory: 136 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000

Output
2000
Answer
2000
Checker Log
ok 1 number(s): "2000"
Test: #29, time: 15 ms., memory: 140 KB, exit code: 0, checker exit code: 0, verdict: OK
Input
1000 1000
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Output
1000
Answer
1000
Checker Log
ok 1 number(s): "1000"
*/